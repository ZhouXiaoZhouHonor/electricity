<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ze.zhou.dao.ProblemImgDao">
	<resultMap type="com.ze.zhou.entity.ProblemImg" id="problemImg-map">
		<id column="problem_img_id" property="problemImgId"/>
		<result column="problem_img_link" property="problemImgLink"/>
		<result column="problem_img_priority" property="problemImgPriority"/>
		<association column="problem_id" property="problem" 
			javaType="com.ze.zhou.entity.Problem">
			<id column="problem_id" property="problemId"/>
		</association>
	</resultMap>
	<!-- 查询图片 -->
	<select id="queryProblemImgByProblem" resultMap="problemImg-map">
		SELECT
		pi.problem_img_id,
		pi.problem_img_link,
		pi.problem_img_priority,
		pi.problem_id
		FROM
		tb_problem_img pi,
		tb_problem p
		WHERE
		pi.problem_id=p.problem_id
	</select>
	<!-- 添加问题图片,需要进行批量插入(图片可能有多个)-->
	<insert id="insertProblemImg" useGeneratedKeys="true"
		keyColumn="problem_img_id" keyProperty="problemImgId">
		INSERT INTO
		tb_problem_img
		(
		problem_img_link,
		problem_img_priority,
		problem_id
		)
		VALUES
		<foreach collection="list" item="item" index="index" separator=",">
		<!-- collection:指定要遍历的集合;表示传入过来的参数的数据类型。该参数为必选。
		要做 foreach 的对象，作为入参时，List 对象默认用 list 代替作为键，数组对象有 array 代替作为键，
		Map 对象没有默认的键;
		item:将当前遍历出的元素赋值给指定的变量,然后用#{变量名},就能取出变量的值,也就是当前遍历出的元素
		separator:每个元素之间的分隔符, select * from Emp where id in(1,2,3)相当于1,2,3之间的","
		Index:索引,遍历list的时候index就是索引,遍历map的时候index表示的就是map的key,item就是map的值.
		-->
		(
		#{item.problemImgLink},
		#{item.problemImgPriority},
		#{item.problem.problemId}
		)
		</foreach>
	</insert>
</mapper>






